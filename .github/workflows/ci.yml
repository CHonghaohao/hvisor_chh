# wheatfox <wheatfox17@icloud.com>
# hvisor Github Actions CI
# version: 2025.2.28
name: CI
on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch:
env:
  MODE: debug
  BOARD: qemu # we can only run auto tests in emulator...
jobs:
  fmt:
    name: linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: linter
        run: make fmt-test
  test:
    name: test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # continue to run all jobs even if some fail
      matrix:
        include:
          # aarch64
          - arch: aarch64
            rustc_target: aarch64-unknown-none
            features: "platform_qemu,gicv3"
          - arch: aarch64
            rustc_target: aarch64-unknown-none
            features: "platform_qemu,gicv2"
          
            # riscv64 will be supported in the future but not now,
          # let's first focus on unittest and system test(root linux) in aarch64 qemu...

          # - arch: riscv64
          #   rustc_target: riscv64gc-unknown-none-elf
          #   features: "platform_qemu,plic"
          # - arch: riscv64
          #   rustc_target: riscv64gc-unknown-none-elf
          #   features: "platform_qemu,aia"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.rustc_target }}
          components: rust-src
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-system-aarch64 qemu-system-riscv64 gdb-multiarch llvm-dev libclang-dev wget
          cargo install --version 0.3.0 cargo-binutils
          cargo install cargo-xbuild
      - name: Set up environment variables
        run: |
          echo "ARCH=${{ matrix.arch }}" >> $GITHUB_ENV
          echo "FEATURES=${{ matrix.features }}" >> $GITHUB_ENV
      - name: build
        run: make
      - name: unittest
        run: make test
